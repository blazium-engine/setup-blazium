name: Setup Blazium CLI Action

description: >-
  Setup Blazium CLI for use with macOS, Windows, and Linux CI/CD runners.

author: 'Blazium'
branding:
  icon: 'hard-drive'
  color: 'white'
inputs:
  cli-version:
    description: >-
      Blazium CLI version: e.g., 0.0.13, 0.0.14, etc. Must include major, minor, and patch.
    default: 0.0.14
  version:
    description: >-
      Blazium Engine version: e.g., 0.1.184, 0.1.188, etc. Must include major, minor, and patch.
    required: true
  path:
    description: >-
      Path to install Blazium CLI to, relative to the current working directory of
      the action.
    default: 'blazium'
  downloads-path:
    description: >-
      Path to download Blazium CLI to, relative to the current working directory of
      the action.
    default: 'downloads'
  bin-path:
    description: >-
      Path for binaries to be installed to, relative to the current working
      directory of the action. This is the path that will be added to the
      system path.
    default: 'bin'
  arch:
    description: >-
      Specify the architecture (e.g., x86_64, arm64, arm32, 32bit, 64bit).
    default: ''
  platform:
    description: >-
      Specify the platform (e.g., linux, windows, macos).
    default: ''
  download_editor:
    description: >-
      Download Blazium CLI Editor
    default: 'true'
  download_template:
    description: >-
      Download Blazium CLI Template
    default: 'false'
  download_mono:
    description: >-
      Download Blazium Mono Version
    default: 'false'
  
runs:
  using: composite
  steps:
    - name: Download Blazium CLI
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          os=linux
        elif [ "$RUNNER_OS" == "Windows" ]; then
          os=windows
        else
          os=darwin
        fi
        mkdir -p ${{ inputs.downloads-path }}
        curl -L -o ${{ inputs.downloads-path }}/blazium-cli https://cdn.blazium.app/cli/$os/${{ inputs.cli-version }}/blazium-cli
        chmod +x ${{ inputs.downloads-path }}/blazium-cli
        ls -l ${{ inputs.downloads-path }}

    - name: Verify Blazium CLI Installation
      shell: bash
      run: |
        ${{ inputs.downloads-path }}/blazium-cli --version

    - name: Blazium CLI Editor
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          if [ "${{ inputs.platform }}" == "" ]; then
            platform=linux
          else
            platform=${{ inputs.platform }}
          fi
          if [ "${{ inputs.arch }}" == "" ]; then
            arch=x86_64
          else
            arch=${{ inputs.arch }}
          fi
        elif [ "$RUNNER_OS" == "Windows" ]; then
          if [ "${{ inputs.platform }}" == "" ]; then
            platform=windows
          else
            platform=${{ inputs.platform }}
          fi
          if [ "${{ inputs.arch }}" == "" ]; then
            arch=x86_64
          else
            arch=${{ inputs.arch }}
          fi
        else
          if [ "${{ inputs.platform }}" == "" ]; then
            platform=macos
          else
            platform=${{ inputs.platform }}
          fi
          if [ "${{ inputs.arch }}" == "" ]; then
            arch=macos
          else
            arch=${{ inputs.arch }}
          fi
        fi
        if [ "${{ inputs.mono }}" == "true" ]; then
          mono=" --mono"
        else
          mono=""
        fi
        mkdir -p ${{ inputs.bin-path }}
        ${{ inputs.downloads-path }}/blazium-cli --get-version ${{ inputs.version }} --arch ${{ inputs.arch }} --download --editor --platform $platform ${{ inputs.bin-path }} $mono
      if: ${{ inputs.download_editor == 'true' }}
    
    - name: Extract the blazium-editor file from zip
      shell: bash
      if: ${{ inputs.download_editor == 'true' }}
      run: |
        # Unzip 1st time
        file=$(ls ${{ inputs.bin-path }})
        unzip ${{ inputs.bin-path }}/$file -d ${{ inputs.bin-path }}
        rm ${{ inputs.bin-path }}/$file

        # Unzip 2nd time
        file=$(ls ${{ inputs.bin-path }})
        unzip ${{ inputs.bin-path }}/$file -d ${{ inputs.bin-path }}
        rm ${{ inputs.bin-path }}/$file
        
    - name: Set Blazium Editor Path
      shell: bash
      if: ${{ inputs.download_editor == 'true' && inputs.platform == 'macos' }}
      run: |
        echo "BLAZIUM_EDITOR=${{ inputs.bin-path }}/Blazium.app/Contents/MacOS/Blazium" >> $GITHUB_ENV

    - name: Set Blazium Editor Path
      shell: bash
      if: ${{ inputs.download_editor == 'true' && inputs.platform == 'linux' }}
      run: |
        file=$(ls ${{ inputs.bin-path }})
        chmod +x ${{ inputs.bin-path }}/$file
        echo "BLAZIUM_EDITOR=${{ inputs.bin-path }}/$file" >> $GITHUB_ENV
    
    - name: Set Blazium Editor Path
      shell: bash
      if: ${{ inputs.download_editor == 'true' && inputs.platform == 'windows' }}
      run: |
        # Find the first subdirectory in the bin path
        subdir=$(find "${{ inputs.bin-path }}" -type d -mindepth 1 -maxdepth 1)
        
        # Find the .console.exe file within the subdirectory
        file=$(find "$subdir" -type f -name '*.console.exe' | head -n 1)
        
        # Set the environment variable with Windows-style path separators
        win_path=$(echo "$file" | sed 's/\//\\\\/g')
        echo "BLAZIUM_EDITOR=$win_path" >> $GITHUB_ENV

    - name: Verify Blazium CLI Editor Installation
      shell: bash
      if: ${{ inputs.download_editor == 'true' }}
      run: |
        ${{ env.BLAZIUM_EDITOR }} --version

    - name: Blazium CLI Template
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          if [ "${{ inputs.platform }}" == "" ]; then
            platform=linux
          else
            platform=${{ inputs.platform }}
          fi
          if [ "${{ inputs.arch }}" == "" ]; then
            arch=x86_64
          else
            arch=${{ inputs.arch }}
          fi
        elif [ "$RUNNER_OS" == "Windows" ]; then
          if [ "${{ inputs.platform }}" == "" ]; then
            platform=windows
          else
            platform=${{ inputs.platform }}
          fi
          if [ "${{ inputs.arch }}" == "" ]; then
            arch=x86_64
          else
            arch=${{ inputs.arch }}
          fi
        else
          if [ "${{ inputs.platform }}" == "" ]; then
            platform=macos
          else
            platform=${{ inputs.platform }}
          fi
          if [ "${{ inputs.arch }}" == "" ]; then
            arch=macos
          else
            arch=${{ inputs.arch }}
          fi
        fi
        if [ "${{ inputs.mono }}" == "true" ]; then
          mono=" --mono"
        else
          mono=""
        fi
        mkdir -p ${{ inputs.bin-path }}
        blazium-cli --get-version ${{ inputs.version }} --arch ${{ inputs.arch }} --download --template --platform ${{ inputs.platform }} ${{ inputs.bin-path }}/templates
        cd ${{ inputs.bin-path }}/templates
        file=$(ls ${{ inputs.bin-path }})
        echo "BLAZIUM_TEMPLATE=${{ inputs.bin-path }}/templates/$file" >> $GITHUB_ENV
      if: ${{ inputs.download_template == 'true' }}

